// <auto-generated />
using System;
using Expense.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Expense.Infrastructure.Data.Migrations
{
    [DbContext(typeof(OutlayDbContext))]
    partial class OutlayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Expense.Domain.Entities.Categories.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Oziq-ovqat"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Mobil aloqa"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Internet"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "O'yin-kulgi"
                        });
                });

            modelBuilder.Entity("Expense.Domain.Entities.Outlays.Outlay", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("outlays", (string)null);
                });

            modelBuilder.Entity("Expense.Domain.Entities.Outlays.Outlay", b =>
                {
                    b.HasOne("Expense.Domain.Entities.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
